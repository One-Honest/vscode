@size:300px;
/* 定义变量,可以用于赋值给属性等 */
@w:width;
/* 变量插值,企业开发一般不用,若要用需添加{},如:@{w} */
.center{//若给变量后加(),转换为css文件之后,变量不会出现在css文件中;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
}
/* 封装混合 */
.mix(@w:300px,@h:300px,@c:tomato)when(ispixel(@w)){//可给在参数后面添加:给参数设定默认值
    //宽高背景混合
    width:@w;
    height:@h;
    background:@c;
}
.animate(@name,@time,...){//...表示可变参数(0个或多个)
    transition:@arguments;//arguments接收所有传入的参数
}
.father:extend(.center){//继承的本质则是并集选择器
    /* @{w}: @size;
    height:@size;
    background-color: tomato; */
    .mix(@c:red);
    // .center;混合的本质的复制粘贴;
    &::after{
        content:"";
        display: block;
        .mix(50px,50px,yellowgreen);
    }
    .son:extend(.center){
        &:hover{//此处&符号的作用是告诉编译器不要将此处当做后代来编译;
            width: 250px;
            height: 250px;
            background:orange;
        }
        &-in{
            width: 50px;
            height: 50px;
            background: #000;
        }
        .mix(200px,200px,skyblue);
        // .center;
        /* transition: all 1s linear 0s; */
        .animate(all,1s);
    }
}
/* 混合的匹配模式 */
/* .triangle(@_,@width,@color){
    width: 0;
    height: 0;
    border-style: solid solid solid solid;
}
.triangle(Top,@width,@color){
    // width: 0;
    // height: 0;
    border-width:@width;
    // border-style: solid solid solid solid;
    border-color: @color transparent transparent transparent;
}
.triangle(Right,@width,@color){
    border-width:@width;
    border-color:transparent @color transparent transparent;
}
.triangle(Bottom,@width,@color){
    border-width:@width;
    border-color: transparent transparent @color transparent;
}
.triangle(Left,@width,@color){
    border-width:@width;
    border-color:transparent transparent transparent @color;
} */
@import "tools/tools.less";
.triangle{
    /* width: 0;
    height: 0;
    border-width:40px 40px 40px 40px;
    border-style: solid solid solid solid;
    border-color: transparent tomato orange orangered; */
    .triangle(Bottom,20px,tomato);
    margin: 0 auto;
}
/* less中的内置函数 */
@str:"../images/gakki1.jpg";
@str2:replace(@str,"1","3");
.inset{
    width:960px;
    height:540px;
    background: url(@str2) no-repeat center center;
}
/* less中添加执行限定条件 
    用> = >= <= 逻辑运算符或者检查函数来添加执行限定条件
    逻辑 或: when (@w=100px),(@h=100px) 表示只有当传入的宽高至少有一个是100px,混合才会进行;
    逻辑 与: when (@w=100px)and(@h=100px) 表示只有当传入的宽高都是100px,混合才会进行;
    内置函数:when(ispixel(@w))表示只有当传入的参数带单位px才执行混合;
*/
/* .mix(@w:300px,@h:300px,@c:tomato) when(ispixel(@w)){//可给在参数后面添加:给参数设定默认值
    //宽高背景混合
    width:@w;
    height:@h;
    background:@c;
} */